[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "jenkins-credential-extractor"
version = "0.1.0"
description = "A CLI tool to bulk extract credentials from Jenkins servers in Linux Foundation projects"
authors = [
    {name = "Mode Seven Industrial Solutions", email = "info@modeseven.io"},
]
dependencies = [
    "typer[all]>=0.9.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "paramiko>=3.3.0",
    "rich>=13.0.0",
    "fuzzywuzzy[speedup]>=0.18.0",
    "pexpect>=4.8.0",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "Apache-2.0"}
keywords = ["jenkins", "credentials", "linux-foundation", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Tools",
    "Topic :: System :: Systems Administration",
]

[project.urls]
Homepage = "https://github.com/ModeSevenIndustrialSolutions/jenkins-credentials"
Repository = "https://github.com/ModeSevenIndustrialSolutions/jenkins-credentials"
Documentation = "https://github.com/ModeSevenIndustrialSolutions/jenkins-credentials#readme"
"Bug Tracker" = "https://github.com/ModeSevenIndustrialSolutions/jenkins-credentials/issues"

[project.scripts]
jenkins-credential-extractor = "jenkins_credential_extractor.cli:app"
jce = "jenkins_credential_extractor.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
lint = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
dev = [
    "pre-commit>=3.0.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jenkins_credential_extractor"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=jenkins_credential_extractor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
